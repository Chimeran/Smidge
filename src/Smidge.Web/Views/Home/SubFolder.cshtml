@using Smidge.Models;
@using Smidge.FileProcessors;
@inject Smidge.SmidgeHelper SmidgeHelper
@inject Smidge.FileProcessors.PreProcessPipelineFactory PipelineFactory
@inject Smidge.BundleManager BundleManager
@addTagHelper "*, Smidge"

<html>
<head>

    @{
        SmidgeHelper
            .CreateJsBundle("inline-js-bundle")
            .RequiresJs("~/Js/test1.js", "~/Js/test2.js")
            .RequiresJs(new JavaScriptFile("~/Js/test2.js")
            {
                Pipeline = PipelineFactory.GetPipeline(typeof(JsMin))
            });
        SmidgeHelper
            .CreateCssBundle("inline-css-bundle")
            .RequiresCss("~/Css/test1.css", "~/Css/test2.css");

        SmidgeHelper.RequiresJs("~/Js/Folder*js");
        SmidgeHelper.RequiresCss("~/Css/Folder*css");
    }

    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/2.1.1/jquery.min.js" type="text/javascript"></script>
    <script src="inline-js-bundle" type="text/javascript"></script>
    <link rel="stylesheet" type="text/css" href="//cdnjs.cloudflare.com/ajax/libs/foundation/5.5.2/css/foundation.min.css" />
    <link rel="stylesheet" href="inline-css-bundle"/>
    <link rel="stylesheet" href="test-bundle-4" />    
</head>
<body>
    
    @Html.Partial("TopBar")
    @Html.Partial("LoadedDependencies", false)

    @await SmidgeHelper.JsHereAsync(debug:false)
    @await SmidgeHelper.JsHereAsync("test-bundle-1")
    @await SmidgeHelper.JsHereAsync("test-bundle-2")

</body>
</html>